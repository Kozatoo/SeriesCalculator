name: Testing pipeline
on: [push]
jobs:
  unitTests:
    runs-on: ubuntu-latest
    steps:
    - name : checkout repository code
      uses : actions/checkout@v3
    - uses : actions/setup-python@v2
      with:
        python-version : 3.8
    - name : install repository
      run : |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt;
        python -m pytest ./tests/unit_tests

  integrationTests:
    runs-on: ubuntu-latest
    steps:
      - name : checkout repository code
        uses : actions/checkout@v3
      - uses : actions/setup-python@v2
        with:
          python-version : 3.8
      - name : install repository
        run : |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt;
          python -m pytest ./tests/integration_tests

  Package:
    runs-on: ubuntu-latest
    needs:
      - unitTests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/series_calculator:latest
  Deploy:
    needs: Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
          USER_NAME: ubuntu

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            sudo docker container stop endorsebase_app
            sudo docker container rm endorsebase_app
            sudo docker image rm ${{ secrets.DOCKER_HUB_USERNAME }}/endorsebase
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/endorsebase:latest
            sudo docker run -d -p 80:3000 --name endorsebase_app ${{ secrets.DOCKER_HUB_USERNAME }}/endorsebase 
          '


